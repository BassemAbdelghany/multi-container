name: Deploy Frontend
on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    environment: sandbox
    steps:
      - uses: actions/checkout@v2
      - run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      # build image for frontend
      - run: docker build -t bhassan310/multi-container-test -f ./client/Dockerfile.dev ./client
      # run test for frontend
      - run: docker run -e CI=true bhassan310/multi-container-test npm run test
      # build production images
      - run: docker build -t bhassan310/multi-container-client ./client
      - run: docker build -t bhassan310/multi-container-nginx ./nginx
      - run: docker build -t bhassan310/multi-container-api ./server
      - run: docker build -t bhassan310/multi-container-worker ./worker
      # push images to docker hub
      - run: docker push bhassan310/multi-container-client
      - run: docker push bhassan310/multi-container-nginx
      - run: docker push bhassan310/multi-container-api
      - run: docker push bhassan310/multi-container-worker
      # generate deployment zip
      - name: Generate deployment package
        run: zip -r deploy.zip . -x '*.git*'
      # upload artifact
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4.3.3
        with:
          name: deploy-files
          path: deploy.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: sandbox
    steps:
    - uses: actions/download-artifact@v4.1.7
    - name: Deploy to EB
      uses: einaregilsson/beanstalk-deploy@v18
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
        aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
        application_name: multi-docker
        environment_name: Multi-docker-env
        existing_bucket_name: elasticbeanstalk-eu-west-1-831986041050
        region: eu-west-1
        version_label: ${{ github.sha }}
        deployment_package: "deploy-files/deploy.zip"
